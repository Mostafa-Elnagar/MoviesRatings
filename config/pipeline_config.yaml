# Movie Ratings Data Pipeline Configuration
# Configuration for the complete data lakehouse infrastructure

# Infrastructure Configuration
infrastructure:
  docker_compose_file: "docker-compose.yml"
  services:
    - minio
    - polaris
    - trino
  
  # Service endpoints
  minio:
    host: "localhost"
    port: 9000
    access_key: "minioadmin"
    secret_key: "minioadmin"
    buckets:
      - "warehouse"
      - "movie-ratings"
  
  polaris:
    url: "http://localhost:8181"
    catalog_uri: "http://polaris:8181/api/catalog/"
    warehouse: "polariscatalog"
    credentials:
      client_id: "root"
      client_secret: "secret"
      scope: "PRINCIPAL_ROLE:ALL"
  
  trino:
    host: "localhost"
    port: 8080
    catalog: "iceberg"
    schema: "movies"

# Iceberg Configuration
iceberg:
  catalog_type: "rest"
  warehouse_location: "polariscatalog"
  format: "PARQUET"
  
  # Table configurations
  tables:
    raw_movies:
      partitioning: ["year(release_date)"]
      write_sort_order: "original_language DESC, release_date DESC, vote_average DESC"
      
    enriched_movies:
      partitioning: ["year(release_date)"]
      write_sort_order: "original_language DESC, release_date DESC, vote_average DESC"
      
    movie_ratings:
      partitioning: ["year(rating_date)"]
      write_sort_order: "source, rating, votes_count"

# Data Sources
data_sources:
  tmdb:
    base_url: "https://api.themoviedb.org/3"
    api_key_env: "TMDB_API_KEY"
    endpoints:
      movies: "/movie/popular"
      movie_details: "/movie/{movie_id}"
      genres: "/genre/movie/list"
  
  omdb:
    base_url: "http://www.omdbapi.com/"
    api_key_env: "OMDB_API_KEY"
  
  metacritic:
    base_url: "https://www.metacritic.com"
    search_endpoint: "/search"
  
  rotten_tomatoes:
    base_url: "https://www.rottentomatoes.com"
    search_endpoint: "/search"

# Data Processing
processing:
  batch_size: 1000
  max_workers: 4
  retry_attempts: 3
  retry_delay: 5
  
  # Data quality thresholds
  quality:
    min_rating: 0.0
    max_rating: 10.0
    min_votes: 10
    required_fields:
      - "id"
      - "title"
      - "release_date"
    optional_fields:
      - "overview"
      - "popularity"
      - "vote_average"
      - "vote_count"

# Monitoring and Logging
monitoring:
  log_level: "INFO"
  log_file: "logs/pipeline.log"
  metrics:
    enabled: true
    port: 9090
  
  alerts:
    enabled: false
    email: ""
    slack_webhook: ""

# Storage Configuration
storage:
  local:
    data_dir: "data"
    temp_dir: "tmp"
    logs_dir: "logs"
  
  s3:
    endpoint: "http://localhost:9000"
    region: "us-east-1"
    use_ssl: false
    path_style: true

# Pipeline Schedule
schedule:
  data_ingestion: "0 2 * * *"  # Daily at 2 AM
  data_enrichment: "0 4 * * *"  # Daily at 4 AM
  data_quality: "0 6 * * *"     # Daily at 6 AM
  cleanup: "0 1 * * 0"          # Weekly on Sunday at 1 AM
